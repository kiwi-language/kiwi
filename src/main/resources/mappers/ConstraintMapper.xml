<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.metavm.object.meta.persistence.mappers.ConstraintMapper">

  <resultMap id="BaseResultMap" type="tech.metavm.object.meta.persistence.ConstraintPO">
    <!--@mbg.generated-->
    <!--@Table `constraint`-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type_id" jdbcType="BIGINT" property="declaringTypeId"/>
    <result column="kind" jdbcType="INTEGER" property="kind"/>
    <result column="message" jdbcType="VARCHAR" property="message"/>
    <result column="param" jdbcType="VARCHAR" property="param"/>
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, type_id, kind, message, param, created_at, updated_at, deleted_at
  </sql>

  <select id="selectByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    `constraint`
    where id in
    <foreach collection="collection" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
    and deleted_at = 0
  </select>

  <insert id="batchInsert">
    <!--@mbg.generated-->
    insert into `constraint` (id, kind, type_id, message, param)
    values
    <foreach collection="collection" item="item" separator=",">
        (#{item.id}, #{item.kind}, #{item.declaringTypeId}, #{item.message}, #{item.param})
    </foreach>

  </insert>

  <update id="batchUpdate">
    <!--@mbg.generated-->
    <foreach collection="collection" item="item" separator=";">
      update `constraint`
      <set>
        <if test="item.kind != null">
          `kind` = #{item.kind},
        </if>
        <if test="item.declaringTypeId != null">
            type_id = #{item.declaringTypeId},
        </if>
        <if test="item.message != null">
          message = #{item.message},
        </if>
        <if test="item.param != null">
          `param` = #{item.param},
        </if>
      </set>
      where id = #{item.id} and deleted_at = 0
    </foreach>
  </update>

  <update id="batchDelete">
    update `constraint`
    set deleted_at = unix_timestamp() * 1000
    where
    deleted_at = 0 and
    id in
    <foreach collection="collection" item="item" separator="," open="(" close=")">
        #{item}
    </foreach>
  </update>

  <select id="selectByTypeIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    `constraint`
    where type_id in
    <foreach collection="collection" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
    and deleted_at = 0
  </select>

  <select id="getStandardConstraints" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    `constraint`
    where id &lt;= 1000 and deleted_at = 0
    </select>

  <select id="countByTypeId" resultType="java.lang.Long">
    select
        count(1)
    from
        `constraint`
    where deleted_at = 0 and type_id = #{typeId}
  </select>


  <select id="selectByTypeId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    `constraint`
    where deleted_at = 0 and type_id = #{typeId}
    limit #{start}, #{limit}
  </select>


</mapper>