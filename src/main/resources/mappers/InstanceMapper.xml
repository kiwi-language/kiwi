<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.metavm.object.instance.persistence.mappers.InstanceMapper">
    <resultMap id="BaseResultMap" type="tech.metavm.object.instance.persistence.InstancePO">
        <!--@mbg.generated-->
        <!--@Table instance-->
        <id property="id" jdbcType="BIGINT" column="id"/>
        <result property="tenantId" jdbcType="BIGINT" column="tenant_id"/>
        <result property="typeId" jdbcType="BIGINT" column="type_id"/>
        <result property="title" jdbcType="VARCHAR" column="title"/>
        <result property="data" column="data"/>
        <result property="parentId" jdbcType="BIGINT" column="parent_id"/>
        <result property="rootId" jdbcType="BIGINT" column="root_id"/>
        <result property="parentFieldId" jdbcType="BIGINT" column="parent_field_id"/>
        <result property="version" jdbcType="BIGINT" column="version"/>
        <result property="syncVersion" jdbcType="BIGINT" column="sync_version"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        title,
        tenant_id,
        type_id,
        data,
        parent_id,
        parent_field_id,
        root_id,
        version,
        sync_version
    </sql>

    <update id="batchDelete">
        <!--@mbg.generated-->
        <foreach collection="versions" item="item" separator=";">
            update instance
            set deleted_at = #{timestamp},
                version    = #{item.version}
            where tenant_id = #{tenantId}
              and deleted_at = 0
              and id = #{item.id}
        </foreach>
    </update>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id">
        <!--@mbg.generated-->
        insert into instance (id, title, tenant_id, type_id, data, root_id, parent_id, parent_field_id)
        values
        <foreach collection="collection" item="item" separator=",">
            (#{item.id}, #{item.title}, #{item.tenantId}, #{item.typeId},
             #{item.data}, #{item.rootId},
             #{item.parentId}, #{item.parentFieldId})
        </foreach>
    </insert>

    <update id="batchUpdate">
        <!--@mbg.generated-->
        <foreach collection="collection" item="item" separator=";">
            update instance set
            <if test="item.data != null">
                data = #{item.data},
            </if>
            title        = #{item.title},
            version      = #{item.version},
            sync_version = #{item.syncVersion}
            where id = #{item.id}
              and tenant_id = #{item.tenantId}
              and deleted_at = 0
        </foreach>
    </update>

    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from instance
        where deleted_at = 0
          and id = #{id}
    </select>


    <select id="selectByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from instance
        where tenant_id = #{tenantId}
          and deleted_at = 0
          and
            id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        <if test="lockMode == 1">
            for share
        </if>
        <if test="lockMode == 2">
            for update
        </if>
    </select>

    <select id="selectByTypeIds" resultMap="BaseResultMap">
        <foreach collection="queries" item="query" separator=" UNION DISTINCT " open="(" close=")">
            select
            <include refid="Base_Column_List"/>
            from instance
            where tenant_id = #{tenantId}
              and deleted_at = 0
              and type_id = #{query.typeId}
              and id >= #{query.startId}
            limit #{query.limit}
        </foreach>
    </select>

    <update id="updateSyncVersion">
        <foreach collection="collection" item="item" separator=";">
            UPDATE instance
            set sync_version = #{item.version}
            where id = #{item.id}
              and sync_version &lt; #{item.version}
              and deleted_at = 0
              and tenant_id = #{item.tenantId}
        </foreach>
    </update>

    <select id="getAliveIds" resultType="java.lang.Long">
        select id
        from instance
        where tenant_id = #{tenantId}
          and deleted_at = 0
          and
            id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="scan" resultMap="BaseResultMap">
        <foreach collection="queries" item="query" separator=" UNION DISTINCT " open="(" close=")">
            select
            <include refid="Base_Column_List"/>
            from instance
            where tenant_id = #{tenantId}
              and deleted_at = 0
              and id > #{query.startId}
            limit #{query.limit}
        </foreach>
    </select>

    <select id="selectVersions" resultType="java.lang.Long">
        select version
        from instance where id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
        and deleted_at = 0 for share
    </select>

    <select id="selectForest" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from instance
        where tenant_id = #{tenantId}
          and deleted_at = 0
          and
            root_id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        <if test="lockMode == 1">
            for share
        </if>
        <if test="lockMode == 2">
            for update
        </if>
    </select>

    <select id="selectRootVersions" resultType="tech.metavm.object.instance.persistence.Version">
        select distinct r.id, r.version
        from instance r
                 inner join instance i on r.id = i.root_id
        where i.tenant_id = #{tenantId}
          and i.id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and i.deleted_at = 0
    </select>
</mapper>