<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.metavm.object.instance.persistence.mappers.ReferenceMapper">
    <resultMap id="BaseResultMap" type="tech.metavm.object.instance.persistence.ReferencePO">
        <!--@mbg.generated-->
        <!--@Table reference-->
        <result property="appId" jdbcType="BIGINT" column="app_id"/>
        <result property="sourceTreeId" jdbcType="BIGINT" column="source_tree_id"/>
        <result property="targetId" jdbcType="BINARY" column="target_id"/>
        <result property="fieldId" jdbcType="BINARY" column="field_id"/>
        <result property="kind" jdbcType="INTEGER" column="kind"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        app_id,
        source_tree_id,
        target_id,
        field_id,
        kind
    </sql>

    <delete id="batchDelete">
        <!--@mbg.generated-->
        delete
        from reference
        where (app_id, source_tree_id, target_id, field_id) in
        <foreach collection="collection" item="item" open="(" close=")" separator=",">
            (#{item.appId}, #{item.sourceTreeId}, #{item.targetId}, #{item.fieldId})
        </foreach>
    </delete>

    <insert id="batchInsert">
        <!--@mbg.generated-->
        insert into reference (app_id, source_tree_id, target_id, field_id, kind)
        values
        <foreach collection="collection" item="item" separator=",">
            (#{item.appId}, #{item.sourceTreeId}, #{item.targetId}, #{item.fieldId}, #{item.kind})
        </foreach>
    </insert>

    <update id="batchUpdate">
        <!--@mbg.generated-->
        <foreach collection="collection" item="item" separator=";">
            update reference
            <set>
                <if test="item.kind != null">
                    kind = #{item.kind},
                </if>
            </set>
            where app_id = #{item.appId}
            and source_tree_id = #{item.sourceTreeId}
            and target_id = #{item.targetId}
            and kind = #{item.kind}
        </foreach>
    </update>

    <select id="selectByTargetsWithKind" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reference
        where
            (app_id, target_id, kind) in
        <foreach collection="collection" item="item" open="(" close=")" separator=",">
            (#{item.appId}, #{item.targetId}, #{item.kind})
        </foreach>
    </select>


    <select id="selectByTargetsWithField" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reference
        where
            (app_id, target_id, field_id) in
        <foreach collection="collection" item="item" open="(" close=")" separator=",">
            (#{item.appId}, #{item.targetId}, #{item.fieldId})
        </foreach>
    </select>

    <select id="selectFirstStrongReference" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
        </include>
        from reference
        where app_id = #{appId}
        and kind = 1
        and
        target_id in
        <foreach collection="targetIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="excludedSourceIds != null and excludedSourceIds.size() != 0">
            and source_tree_id not in
            <foreach collection="excludedSourceIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        limit 1
    </select>

    <select id="selectAllStrongReferences" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reference
        use index (target_idx)
        where app_id = #{appId}
        and kind = 1
        and target_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="excludedSourceIds != null and excludedSourceIds.size() != 0">
            and source_tree_id not in
            <foreach collection="excludedSourceIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="selectByTargetId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reference
        where app_id = #{appId}
        and target_id = #{targetId}
        and source_tree_id > #{startIdExclusive}
        order by source_tree_id
        limit #{limit}
    </select>
</mapper>