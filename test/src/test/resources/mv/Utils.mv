import java.util.List;
import java.util.ArrayList;
import java.lang.Iterable;

class Utils {

    public static boolean test(List<string> list, List<string> tests) {
       return Utils.<string>containsAny(list, tests);
    }

    public static boolean test2(List<string> list, string s1, string s2) {
        return Utils.<string>containsAny(list, s1, s2);
    }

    public static <T> boolean containsAny(Iterable<[never, T]> iterable, Iterable<[never, T]> values) {
        var it = iterable.iterator()!!;
        while (it.hasNext()) {
            var next = it.next()!!;
            var it1 = values.iterator()!!;
            while (it1.hasNext()) {
                var next1 = it1.next()!!;
                if(equals(next, next1)) {
                    return true;
                }
            }
        }
        return false;
    }

    public static <T> boolean containsAny(Iterable<[never, T]> iterable, T value1, T value2) {
        var list = unew ArrayList<T>();
        list.add(value1);
        list.add(value2);
        return Utils.<T>containsAny(iterable, list);
    }

}