import java.util.List;
import java.util.ArrayList;

class LivingBeing {

    private int age;
    private any|null extra;
    private List<LivingBeing> offsprings;
    private List<LivingBeing> ancestors;

    public LivingBeing(int age, any|null extra) {
        this.age = age;
        this.extra = extra;
        this.offsprings = new ArrayList<LivingBeing>();
        this.ancestors = new ArrayList<LivingBeing>();
    }

    public int getAge() {
        return this.age;
    }

    public any|null getExtra() {
        return this.extra;
    }

    public List<LivingBeing> getOffsprings() {
        return new ArrayList<LivingBeing>(this.offsprings);
    }

    public List<LivingBeing> getAncestors() {
        return new ArrayList<LivingBeing>(this.ancestors);
    }

    public void addOffspring(LivingBeing offspring) {
        this.offsprings.add(offspring);
    }

    public void addAncestor(LivingBeing ancestor) {
        this.ancestors.add(ancestor);
    }

    public string makeSound() {
        return "Gu gu gu gu";
    }

}

class Animal extends LivingBeing {

    private int intelligence;

    public Animal(int age, any|null extra, int intelligence) {
        super(age, extra);
        this.intelligence = intelligence;
    }

    public int getIntelligence() {
        return this.intelligence;
    }

    public string makeSound() {
        return "Howl~";
    }

}

class Human extends Animal implements Sentient {

    private string occupation;
    private boolean thinking;

    public Human(int age, any|null extra, int intelligence, string occupation) {
        super(age, extra, intelligence);
        this.occupation = occupation;
        this.thinking = false;
    }

   public string getOccupation() {
        return this.occupation;
   }

   public boolean isThinking() {
        return this.thinking;
   }

   public string makeSound() {
        return "I am a human being";
   }

   public void think() {
        this.thinking = true;
   }

}

interface Sentient {

    public void think();

}