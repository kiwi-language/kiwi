import java.lang.IllegalStateException;

class Product {
    private title string name;
    private ProductKind kind;

    public Product(string name, ProductKind kind) {
        this.name = name;
        this.kind = kind;
    }

    public string getName() {
        return this.name;
    }

    public void setName(string name) {
        this.name = name;
    }

    public ProductKind getKind() {
        return this.kind;
    }

    public void setKind(ProductKind kind) {
        this.kind = kind;
    }

    public boolean isDefaultKind() {
        r: this.kind.isDefault();
        return r;
    }

}

enum ProductKind {

    DEFAULT(0),
    HOTEL(1),
    VIRTUAL(2)

    ;

    private readonly int code;
    private deleted string name;

    public ProductKind(int code) {
        this.code = code;
    }

    public ProductKind(int code) {
        this.code = code;
    }

    public int getCode() {
        return this.code;
    }

    public boolean isDefault() {
        return this == ProductKind.DEFAULT;
    }

    public static ProductKind __map__(ProductKind kind) {
        if(kind.ordinal != -1) {
            return kind;
        }
        values: ProductKind.values();
        loop: for(int i = 0; loop.i < len(values); i = loop.i + 1) {
            name: values[loop.i].name();
            if(name == kind.name) {
                return values[loop.i];
            }
        }
        exception: new IllegalStateException(concat("Failed to map enum constant: ", kind.name));
        throw exception;
    }

}