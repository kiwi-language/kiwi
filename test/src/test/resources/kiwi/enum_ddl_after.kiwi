import java.lang.IllegalStateException

class Product(
    var name: string,
    var kind: ProductKind
) {

    fn getName() -> string {
        return this.name
    }

    fn setName(name: string) {
        this.name = name
    }

    fn getKind() -> ProductKind {
        return this.kind
    }

    fn setKind(kind: ProductKind ) {
        this.kind = kind
    }

    fn isDefaultKind() -> bool {
        return this.kind.isDefault()
    }

}

enum ProductKind(val code: int) {

    DEFAULT(0),
    HOTEL(1),
    VIRTUAL(2)

;

    priv deleted var name: string?

    fn getCode() -> int {
        return this.code
    }

    fn isDefault() -> bool {
        return this == ProductKind.DEFAULT
    }

    static fn __map__(kind: ProductKind ) -> ProductKind {
        if(kind.ordinal != -1) {
            return kind
        }
        var values = ProductKind.values()
        var i = 0
        while (i < values.length) {
            var name = values[i].name()!!
            if(equals(name, kind.name)) {
                return values[i]
            }
            i = i + 1
        }
        throw IllegalStateException(concat("Failed to map enum constant: ", kind.name))
    }

}