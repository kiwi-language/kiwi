import java.lang.IllegalStateException

class Product {

    priv var name: string
    priv var kind: ProductKind

    init(name: string, kind: ProductKind) {
        this.name = name
        this.kind = kind
    }

    fn getName() -> string {
        return this.name
    }

    fn setName(name: string) {
        this.name = name
    }

    fn getKind() -> ProductKind {
        return this.kind
    }

    fn setKind(kind: ProductKind) {
        this.kind = kind
    }

}

enum ProductKind {

    DEFAULT(0),
    VIRTUAL(1),
    HOTEL(2)

;

    priv val code: int
    priv deleted var name: string

    init(code: int) {
        this.code = code
    }

    fn getCode() -> int {
        return this.code
    }

    static fn __map__(kind: ProductKind) -> ProductKind {
        var values = ProductKind.values()
        var i = 0
        while (i < values.length) {
            var name = values[i].name()!!
            if(equals(name, kind.name)) {
                return values[i]
            }
            i = i + 1
        }
        throw IllegalStateException(concat("Can not find an enum constant of for: ProductKind name: ", kind.name))
    }

}