package innerclass

class InnerClassExtension(priv val value0: int) {

    static fn sum(v1: int, v2: int, v3: int, v4: int) -> int {
        var i1 = InnerClassExtension(0).Inner2(v1, v3)
        var i2 = i1.Inner21(v2, v4)
        return i2.sum()
    }

    class Inner2(value1: int, priv val value3: int): Inner1(value1) {

        class Inner21(value2: int, priv val value4: int): Inner11(value2) {

            fn sum() -> int {
                return value0 + value1 + value2 + value3 + value4
            }

            fn value1() -> int {
                return value1
            }

        }

    }

    class Inner1(val value1: int) {

        class Inner11(val value2: int) {

        }

    }

}

