import java.lang.Iterable
import java.util.List

class Utils {

    static fn findGt(list: List<int>, value: int) -> int? {
        return Utils.find<int>(list, getGtOperator(value))
    }

    static fn getGtOperator(value: int) -> (int) -> bool {
        return v -> v > value
    }

    static fn find<T>(iterable: Iterable<[never, T]>, test: (T) -> bool) ->  T? {
        var it = iterable.iterator()!!
        while (it.hasNext()) {
            var next: T = it.next()!!
            if (test(next)) {
                return next
            }
        }
        return null
    }

}