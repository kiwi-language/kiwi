import java.util.List
import java.util.ArrayList

class LivingBeing(
    var age: int,
    var extra: any?
) {

    var offsprings: List<LivingBeing> = ArrayList<LivingBeing>()
    var ancestors: List<LivingBeing> = ArrayList<LivingBeing>()

    fn getAge() -> int {
        return this.age
    }

    fn getExtra() -> any|null {
        return this.extra
    }

    fn getOffsprings() -> List<LivingBeing> {
        return ArrayList<LivingBeing>(this.offsprings)
    }

    fn getAncestors() -> List<LivingBeing> {
        return ArrayList<LivingBeing>(this.ancestors)
    }

    fn addOffspring(offspring: LivingBeing) {
        this.offsprings.add(offspring)
    }

    fn addAncestor(ancestor: LivingBeing) {
        this.ancestors.add(ancestor)
    }

    fn makeSound() -> string {
        return "Gu gu gu gu"
    }

}

class Animal(
    age: int,
    extra: any|null,
    var intelligence: int
): LivingBeing(age, extra) {

    fn getIntelligence() -> int {
        return this.intelligence
    }

    fn makeSound() -> string {
        return "Howl~"
    }

}

class Human(
    age: int,
    extra: any|null,
    intelligence: int,
    var occupation: string
): Animal(age, extra, intelligence), Sentient {

   var thinking = false

   fn getOccupation() -> string {
        return this.occupation
   }

   fn isThinking() -> bool {
        return this.thinking
   }

   fn makeSound() -> string {
        return "I am a human being"
   }

   fn think() {
        this.thinking = true
   }

}

interface Sentient {

    fn think()

}