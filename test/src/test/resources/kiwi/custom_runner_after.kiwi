import org.metavm.api.Index

@Component
class Lab {

    fn  getFieldValue(field: Field) -> any? {
        var fieldValue = FieldValue.fieldIdx.getFirst(field)
        if(fieldValue == null) {
            return null
        } else {
            return fieldValue!!.getValue()
        }
    }

    fn setFieldValue(field: Field,  v: any?) {
        var fieldValue = FieldValue.fieldIdx.getFirst(field)
        if(fieldValue == null) {
            FieldValue(field).setValue(v)
        } else {
            fieldValue!!.setValue(v)
        }
    }

}

class Field {

    priv var name: string
    priv deleted var value: any?

    init(name: string) {
        this.name = name
    }

    fn getName() -> string {
        return this.name
    }

    fn setName(name: string) {
        this.name = name
    }

    fn __run__() {
        FieldValue(this).setValue(this.value)
    }

}

value class IdxFieldValueField {

    priv val field: Field

    init(field: Field) {
        this.field = field
    }

}

class FieldValue {

    priv static val fieldIdx = Index<Field, FieldValue>(true, v -> v.field)

    priv var field: Field
    priv var  value: any?

    init(field: Field) {
        this.field = field
        this.value = null
    }

    fn getValue() -> any? {
        return this.value
    }

    fn setValue(v: any?){
        this.value = v
    }

    fn getField() -> Field {
        return this.field
    }

}