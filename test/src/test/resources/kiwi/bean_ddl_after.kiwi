abstract class BaseService {

    prot val idService: IdService

    init(idService: IdService) {
        this.idService = idService
    }

}

value class IdxFooServiceAllFlags {

    priv val allFlags: bool

    init(allFlags: bool) {
        this.allFlags = allFlags
    }

}

@Component
class FooService: BaseService {

    priv val allFlags: bool
    priv val barService: BarService

    init(idService: IdService, barService: BarService) {
        super.init(idService)
        this.allFlags = true
        this.barService = barService
    }

    fn idxAllFlags() -> IdxFooServiceAllFlags {
        return IdxFooServiceAllFlags(this.allFlags)
    }

}

@Component
class BarService: BaseService {

    priv var allFlags: bool

    init(idService: IdService) {
        super.init(idService)
        this.allFlags = true
    }

    fn idxAllFlags() -> IdxBarServiceAllFlags {
        return IdxBarServiceAllFlags(this.allFlags)
    }

}

value class IdxBarServiceAllFlags {

    priv val allFlags: bool

    init(allFlags: bool) {
        this.allFlags = allFlags
    }

}

interface IdService {

}

@Component
class IdServiceImpl: IdService {

}

