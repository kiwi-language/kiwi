package lambda

import java.util.Comparator

class LambdaFoo {

    static fn comparator<T: Comparable<[T, any]>>() -> (T, T) -> int {
        return (t1, t2) -> t1.compareTo(t2)
    }

    static fn compare(v1: long, v2: long) -> int {
        var cmp: (Item, Item) -> int = comparator<Item>()
        return cmp(Item(v1), Item(v2))
    }

    priv static class Item: Comparable<Item> {

        priv val value: long

        fn compareTo(o: Item?) -> int {
            return Long.compare(value, o!!.value)
        }

        fn value() -> long {
            return value
        }

        priv init(value: long) {
            this.value = value
        }

    }

}

