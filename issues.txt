1 Error occurs when Field.postRemove doesn't check if the field is static:
org.metavm.util.BusinessException: Object is referenced by others and cannot be deleted: Klass-Input_3847503194616142

	at org.metavm.object.instance.core.InstanceContext.lambda$validateRemoval$16(InstanceContext.java:399)
	at org.metavm.object.instance.core.Instance.visitGraph0(Instance.java:778)
	at org.metavm.object.instance.core.Instance.lambda$visitGraph0$10(Instance.java:781)
	at org.metavm.object.instance.core.ClassInstance.lambda$forEachReference$6(ClassInstance.java:174)
	at org.metavm.object.instance.core.ClassInstance$FieldTable.forEachField(ClassInstance.java:686)
	at org.metavm.object.instance.core.ClassInstance.forEachField(ClassInstance.java:123)
	at org.metavm.object.instance.core.ClassInstance.forEachReference(ClassInstance.java:172)
	at org.metavm.object.instance.core.Instance.visitGraph0(Instance.java:779)
	at org.metavm.object.instance.core.Instance.visitGraph(Instance.java:772)
	at org.metavm.object.instance.core.InstanceContext.lambda$validateRemoval$18(InstanceContext.java:395)
	at org.metavm.object.instance.core.InstanceContext.forEachInitializedRoot(InstanceContext.java:256)
	at org.metavm.object.instance.core.InstanceContext.validateRemoval(InstanceContext.java:393)
	at org.metavm.object.instance.core.InstanceContext.finishInternal(InstanceContext.java:119)
	at org.metavm.object.instance.core.BaseInstanceContext.finish(BaseInstanceContext.java:435)
	at org.metavm.entity.BaseEntityContext.finish(BaseEntityContext.java:470)
	at org.metavm.object.type.TypeManager.batchSave(TypeManager.java:291)
	at org.metavm.util.MockUtils.lambda$assemble$4(MockUtils.java:481)
	at org.metavm.util.MockTransactionUtils.doInTransaction(MockTransactionUtils.java:40)
	at org.metavm.util.TestUtils.doInTransaction(TestUtils.java:211)
	at org.metavm.util.MockUtils.assemble(MockUtils.java:481)
	at org.metavm.object.type.DDLTest.assemble(DDLTest.java:890)
	at org.metavm.object.type.DDLTest.assemble(DDLTest.java:886)
	at org.metavm.object.type.DDLTest.testAbortingEnumToValueConversion(DDLTest.java:700)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

2 The current pre-upgrade DDL does not support static field refactoring. To enable this, we first need to implement a custom DDL function mechanism.
