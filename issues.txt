1 Duplicate entries appear in ID files when changing the type of a built-in field.
For example, when changing SystemDDL.runMethods to nullable, there will be two entries for `org.metavm.ddl.SystemDDL.mappings.builtin.fieldMappings.runMethods.nestedMapping`,
one in ArrayNestedMapping.properties and the other in UnionNestedMapping.properties
2 Add support for deleted fields to standard klasses
3 Saving an instance of a raw type through ApiService is not prevented.
4 Add support for ephemeral classes in compiler
5 Recurring problem: A parameterized class is generated with a higher stage than the template class, causing missing elements.
6 Add support for invocations of the compareTo method on string objects. Note that the invocation can happen inside
a parameterized method with a string type argument, making it impossible to substitute the invocation with
a std function call at compile time. An example is shown below:

class Lab {

    static <T extends Comparable<? super T>> compare(T t1, T t2) {
        return t1.compareTo(t2);
    }

    static int compareStrings(String s1, String s2) {
        return compare(s1, s2);
    }

}

7 Add compiler support catching exceptions raised by methods called inside the try block, including unchecked exceptions.
8 Accessors in a record class should not be treated as entity struct components. If they are, it will lead to a mismatch
between the signature of the canonical record constructor and that of the canonical EntityStruct constructor.
This discrepancy will cause a NullPointerException in MappingSaver.getCanonicalConstructor.
Below is an example that illustrates this problem:
record Foo(String value) {

    public Supplier<String> getSupplier() {
        return () -> value;
    }

}

9 Klass.addParameterized occasionally raises IllegalStateException complaining that the parameterized already exists.
10 Incorrect values get resolved for prefix and postfix expressions when the operand is a field
11 Memory leaks in compiler test cases through ThreadLocalDefContextHolder
12 Strings are not assignable CharSequence in MetaVM
13 Add support for byte, short and int types

Issues with compiling java.util.Map

1 New array expressions using raw element types must be handled